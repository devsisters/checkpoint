apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "checkpoint.fullname" . }}-controller
  labels:
    {{- include "checkpoint.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      {{- include "checkpoint.selectorLabels.controller" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.controller.podAnnotations | default .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "checkpoint.selectorLabels.controller" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets | default .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: "{{ include "checkpoint.fullname" . }}-controller"
      securityContext:
        {{- toYaml (.Values.controller.podSecurityContext | default .Values.podSecurityContext) | nindent 8 }}
      containers:
      - name: controller
        securityContext:
          {{- toYaml (.Values.controller.securityContext | default .Values.securityContext) | nindent 10 }}
        image: "{{ .Values.controller.image.repository | default .Values.image.repository }}:{{ .Values.controller.image.tag | default .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.controller.image.pullPolicy | default .Values.image.pullPolicy }}
        command: ["/usr/local/bin/checkpoint-controller"]
        resources:
          {{- toYaml (.Values.controller.resources | default .Values.resources) | nindent 10 }}
        env:
        - name: RUST_LOG
          value: info
        - name: CONF_SERVICE_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: CONF_SERVICE_NAME
          value: {{ include "checkpoint.fullname" . }}-webhook
        - name: CONF_SERVICE_PORT
          value: "{{ .Values.controller.service.port }}"
        - name: CONF_CA_BUNDLE
          valueFrom:
            secretKeyRef:
              name: {{ include "checkpoint.fullname" . }}-cert
              key: cert.pem
      {{- with .Values.controller.nodeSelector | default .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity | default .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations | default .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "checkpoint.fullname" . }}-webhook
  labels:
    {{- include "checkpoint.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.webhook.replicaCount }}
  selector:
    matchLabels:
      {{- include "checkpoint.selectorLabels.webhook" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.webhook.podAnnotations | default .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "checkpoint.selectorLabels.webhook" . | nindent 8 }}
    spec:
      {{- with .Values.webhook.imagePullSecrets | default .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: "{{ include "checkpoint.fullname" . }}-webhook"
      securityContext:
        {{- toYaml (.Values.webhook.podSecurityContext | default .Values.podSecurityContext) | nindent 8 }}
      containers:
      - name: webhook
        securityContext:
          {{- toYaml (.Values.webhook.securityContext | default .Values.securityContext) | nindent 10 }}
        image: "{{ .Values.webhook.image.repository | default .Values.image.repository }}:{{ .Values.webhook.image.tag | default .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.webhook.image.pullPolicy | default .Values.image.pullPolicy }}
        command: ["/usr/local/bin/checkpoint-webhook"]
        ports:
        - containerPort: 3000
        resources:
          {{- toYaml (.Values.webhook.resources | default .Values.resources) | nindent 10 }}
        env:
        - name: RUST_LOG
          value: info
        - name: CONF_CERT_PATH
          value: /tmp/cert/cert.pem
        - name: CONF_KEY_PATH
          value: /tmp/cert/key.pem
        volumeMounts:
        - name: certs
          mountPath: /tmp/cert
          readOnly: true
        livenessProbe:
          httpGet:
            path: /ping
            port: 3000
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /ping
            port: 3000
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
      volumes:
      - name: certs
        secret:
          secretName: {{ include "checkpoint.fullname" . }}-cert
      {{- with .Values.webhook.nodeSelector | default .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webhook.affinity | default .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webhook.tolerations | default .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
