apiVersion: v1
kind: ServiceAccount
metadata:
  name: checkpoint-validatingrule-block-pod-exec-by-namespace-annotation
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: checkpoint-validatingrule-block-pod-exec-by-namespace-annotation
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: checkpoint-validatingrule-block-pod-exec-by-namespace-annotation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: checkpoint-validatingrule-block-pod-exec-by-namespace-annotation
subjects:
- kind: ServiceAccount
  name: checkpoint-validatingrule-block-pod-exec-by-namespace-annotation
  namespace: default
---
apiVersion: checkpoint.devsisters.com/v1
kind: ValidatingRule
metadata:
  name: block-pod-exec-by-namespace-annotation
spec:
  objectRules:
  - apiGroups: [""]
    apiVersions: ["*"]
    resources: ["pods/exec"]
    operations: ["CONNECT"]
  serviceAccount:
    namespace: default
    name: checkpoint-validatingrule-block-pod-exec-by-namespace-annotation
  code: |
    const request = getRequest();
    const namespace = kubeGet({
      group: "",
      version: "v1",
      kind: "Namespace",
      name: request.namespace,
    });
    const namespaceAnnotations = namespace.metadata.annotations ?? {};
    if namespaceAnnotations["block-exec"] === "true" then
      deny("Pod exec is blocked in this namespace");
    end
