# Protect Namespaces, PersistentVolumeClaims, and StatefulSets from accidential deletion.
---
apiVersion: checkpoint.devsisters.com/v1
kind: ValidatingRule
metadata:
  name: delete-protection
spec:
  namespaceSelector:
    matchExpressions:
    - key: delete-protection/ignored
      operator: NotIn
      values: ["true"]
  objectRules:
  - apiGroups: [""]
    apiVersions: ["*"]
    resources: ["namespaces", "persistentvolumeclaims"]
    operations: ["DELETE"]
  - apiGroups: ["apps"]
    apiVersions: ["*"]
    resources: ["statefulsets"]
    operations: ["DELETE"]
    scope: "Namespaced"
  code: |
    // Config
    const annotationKey = "delete-allow";
    const annotationValue = "true";

    const request = getRequest();
    const annotation = (request.oldObject.metadata.annotations ?? {})[annotationKey];
    if (annotation != null) {
      if (annotationValue === "") {
        allow();
      } else if (annotation === annotationValue) {
        allow();
      } else {
        deny(`resource ${request.name}: key exists but value mismatch: expected \`${annotationValue}\`, got \`${annotation}\``);
      }
    } else {
      deny(`resource ${request.name}: does not contain annotation \`${annotationKey}\` with value \`${annotationValue}\``);
    }
