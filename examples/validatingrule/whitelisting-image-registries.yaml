apiVersion: checkpoint.devsisters.com/v1
kind: ValidatingRule
metadata:
  name: whitelisting-image-registries
spec:
  objectRules:
  - apiGroups: [""]
    apiVersions: ["*"]
    resources: ["pods"]
    operations: ["CREATE"]
  code: |
    // Config
    const allowedRegistries = ["docker.io", "k8s.gcr.io"];

    // Check image of containers, returns nil if validation was passed
    function checkContainers(containers) {
      for (const container of containers) {
        const registry = getRegistry(container.image);
        if (!allowedRegistries.includes(registry)) {
          return `Image registry \`${registry}\` is not in the white list`;
        }
      }
    }

    // Get registry from image path
    function getRegistry(image) {
      const index = image.indexOf("/");
      if (index === -1) {
        return "docker.io";
      } else {
        const prefix = image.slice(0, index);
        if (!prefix.includes(".")) { // if `prefix` is username in docker hub
          return "docker.io";
        } else {
          return prefix;
        }
      }
    }

    function main(request) {
      if (request.object.spec.initContainers != null) {
        const result = checkContainers(request.object.spec.initContainers);
        if (result != null) {
          deny(result);
          return;
        }
      }

      const result = checkContainers(request.object.spec.containers);
      if (result != null) {
        deny(result);
        return;
      }
    }

    const request = getRequest();
    main(request);
